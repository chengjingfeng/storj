// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: uplink.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type IDVersion struct {
	Number               uint32   `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	NewPrivateKey        uint64   `protobuf:"varint,2,opt,name=new_private_key,json=newPrivateKey,proto3" json:"new_private_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDVersion) Reset()         { *m = IDVersion{} }
func (m *IDVersion) String() string { return proto.CompactTextString(m) }
func (*IDVersion) ProtoMessage()    {}
func (*IDVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6cead23ed820d0c, []int{0}
}
func (m *IDVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDVersion.Unmarshal(m, b)
}
func (m *IDVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDVersion.Marshal(b, m, deterministic)
}
func (m *IDVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDVersion.Merge(m, src)
}
func (m *IDVersion) XXX_Size() int {
	return xxx_messageInfo_IDVersion.Size(m)
}
func (m *IDVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_IDVersion.DiscardUnknown(m)
}

var xxx_messageInfo_IDVersion proto.InternalMessageInfo

func (m *IDVersion) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *IDVersion) GetNewPrivateKey() uint64 {
	if m != nil {
		return m.NewPrivateKey
	}
	return 0
}

type TLSConfig struct {
	SkipPeerCaWhitelist  bool     `protobuf:"varint,1,opt,name=skip_peer_ca_whitelist,json=skipPeerCaWhitelist,proto3" json:"skip_peer_ca_whitelist,omitempty"`
	PeerCaWhitelistPath  string   `protobuf:"bytes,2,opt,name=peer_ca_whitelist_path,json=peerCaWhitelistPath,proto3" json:"peer_ca_whitelist_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSConfig) Reset()         { *m = TLSConfig{} }
func (m *TLSConfig) String() string { return proto.CompactTextString(m) }
func (*TLSConfig) ProtoMessage()    {}
func (*TLSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6cead23ed820d0c, []int{1}
}
func (m *TLSConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSConfig.Unmarshal(m, b)
}
func (m *TLSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSConfig.Marshal(b, m, deterministic)
}
func (m *TLSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSConfig.Merge(m, src)
}
func (m *TLSConfig) XXX_Size() int {
	return xxx_messageInfo_TLSConfig.Size(m)
}
func (m *TLSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLSConfig proto.InternalMessageInfo

func (m *TLSConfig) GetSkipPeerCaWhitelist() bool {
	if m != nil {
		return m.SkipPeerCaWhitelist
	}
	return false
}

func (m *TLSConfig) GetPeerCaWhitelistPath() string {
	if m != nil {
		return m.PeerCaWhitelistPath
	}
	return ""
}

type UplinkConfig struct {
	Tls                  *TLSConfig `protobuf:"bytes,1,opt,name=tls,proto3" json:"tls,omitempty"`
	IdentityVersion      *IDVersion `protobuf:"bytes,2,opt,name=identity_version,json=identityVersion,proto3" json:"identity_version,omitempty"`
	PeerIdVersion        string     `protobuf:"bytes,3,opt,name=peer_id_version,json=peerIdVersion,proto3" json:"peer_id_version,omitempty"`
	MaxInlineSize        int64      `protobuf:"varint,4,opt,name=max_inline_size,json=maxInlineSize,proto3" json:"max_inline_size,omitempty"`
	MaxMemory            int64      `protobuf:"varint,5,opt,name=max_memory,json=maxMemory,proto3" json:"max_memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UplinkConfig) Reset()         { *m = UplinkConfig{} }
func (m *UplinkConfig) String() string { return proto.CompactTextString(m) }
func (*UplinkConfig) ProtoMessage()    {}
func (*UplinkConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6cead23ed820d0c, []int{2}
}
func (m *UplinkConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UplinkConfig.Unmarshal(m, b)
}
func (m *UplinkConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UplinkConfig.Marshal(b, m, deterministic)
}
func (m *UplinkConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UplinkConfig.Merge(m, src)
}
func (m *UplinkConfig) XXX_Size() int {
	return xxx_messageInfo_UplinkConfig.Size(m)
}
func (m *UplinkConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_UplinkConfig.DiscardUnknown(m)
}

var xxx_messageInfo_UplinkConfig proto.InternalMessageInfo

func (m *UplinkConfig) GetTls() *TLSConfig {
	if m != nil {
		return m.Tls
	}
	return nil
}

func (m *UplinkConfig) GetIdentityVersion() *IDVersion {
	if m != nil {
		return m.IdentityVersion
	}
	return nil
}

func (m *UplinkConfig) GetPeerIdVersion() string {
	if m != nil {
		return m.PeerIdVersion
	}
	return ""
}

func (m *UplinkConfig) GetMaxInlineSize() int64 {
	if m != nil {
		return m.MaxInlineSize
	}
	return 0
}

func (m *UplinkConfig) GetMaxMemory() int64 {
	if m != nil {
		return m.MaxMemory
	}
	return 0
}

func init() {
	proto.RegisterType((*IDVersion)(nil), "storj.libuplink.IDVersion")
	proto.RegisterType((*TLSConfig)(nil), "storj.libuplink.TLSConfig")
	proto.RegisterType((*UplinkConfig)(nil), "storj.libuplink.UplinkConfig")
}

func init() { proto.RegisterFile("uplink.proto", fileDescriptor_c6cead23ed820d0c) }

var fileDescriptor_c6cead23ed820d0c = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0xcd, 0x6a, 0xf2, 0x40,
	0x14, 0x25, 0xea, 0x27, 0x5f, 0x6e, 0x0d, 0x29, 0x11, 0x24, 0x14, 0x0a, 0xe2, 0x42, 0x5c, 0x94,
	0x2c, 0xea, 0x1b, 0xd4, 0x76, 0x21, 0xb6, 0x20, 0x63, 0x7f, 0xa0, 0x9b, 0x61, 0x52, 0x6f, 0xeb,
	0xad, 0xc9, 0x64, 0x98, 0x8c, 0x3f, 0xf1, 0xb1, 0xfb, 0x04, 0x25, 0xa3, 0x86, 0xfe, 0x2d, 0xe7,
	0xdc, 0x73, 0xee, 0x39, 0xf7, 0x0c, 0xb4, 0x56, 0x2a, 0x21, 0xb9, 0x8c, 0x94, 0xce, 0x4c, 0x16,
	0xf8, 0xb9, 0xc9, 0xf4, 0x7b, 0x94, 0x50, 0xbc, 0x87, 0x7b, 0x13, 0x70, 0xc7, 0xd7, 0x8f, 0xa8,
	0x73, 0xca, 0x64, 0xd0, 0x81, 0xa6, 0x5c, 0xa5, 0x31, 0xea, 0xd0, 0xe9, 0x3a, 0x03, 0x8f, 0x1d,
	0x5e, 0x41, 0x1f, 0x7c, 0x89, 0x1b, 0xae, 0x34, 0xad, 0x85, 0x41, 0xbe, 0xc4, 0x22, 0xac, 0x75,
	0x9d, 0x41, 0x83, 0x79, 0x12, 0x37, 0xd3, 0x3d, 0x3a, 0xc1, 0xa2, 0xb7, 0x02, 0xf7, 0xfe, 0x76,
	0x36, 0xca, 0xe4, 0x2b, 0xbd, 0x05, 0x43, 0xe8, 0xe4, 0x4b, 0x52, 0x5c, 0x21, 0x6a, 0xfe, 0x22,
	0xf8, 0x66, 0x41, 0x06, 0x13, 0xca, 0x8d, 0x5d, 0xfe, 0x9f, 0xb5, 0xcb, 0xe9, 0x14, 0x51, 0x8f,
	0xc4, 0xd3, 0x71, 0x54, 0x8a, 0x7e, 0xf1, 0xb9, 0x12, 0x66, 0x61, 0x0d, 0x5d, 0xd6, 0x56, 0xdf,
	0x05, 0x53, 0x61, 0x16, 0xbd, 0x0f, 0x07, 0x5a, 0x0f, 0xf6, 0x9c, 0x83, 0xf5, 0x05, 0xd4, 0x4d,
	0x92, 0x5b, 0x9f, 0x93, 0xcb, 0xb3, 0xe8, 0xc7, 0xcd, 0x51, 0x95, 0x91, 0x95, 0xb4, 0xe0, 0x06,
	0x4e, 0x69, 0x8e, 0xd2, 0x90, 0x29, 0xf8, 0x7a, 0xdf, 0x84, 0x75, 0xfb, 0x4b, 0x5a, 0x75, 0xc5,
	0xfc, 0xa3, 0xe6, 0x58, 0x5e, 0x1f, 0x7c, 0x1b, 0x9d, 0xe6, 0xd5, 0x96, 0xba, 0xcd, 0xec, 0x95,
	0xf0, 0x78, 0xfe, 0x85, 0x97, 0x8a, 0x2d, 0x27, 0x99, 0x90, 0x44, 0x9e, 0xd3, 0x0e, 0xc3, 0x46,
	0xd7, 0x19, 0xd4, 0x99, 0x97, 0x8a, 0xed, 0xd8, 0xa2, 0x33, 0xda, 0x61, 0x70, 0x0e, 0x50, 0xf2,
	0x52, 0x4c, 0x33, 0x5d, 0x84, 0xff, 0x2c, 0xc5, 0x4d, 0xc5, 0xf6, 0xce, 0x02, 0x57, 0x8d, 0xe7,
	0x9a, 0x8a, 0xe3, 0xa6, 0xfd, 0xd6, 0xe1, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0xee, 0xe2, 0xd4,
	0x4b, 0xe6, 0x01, 0x00, 0x00,
}
